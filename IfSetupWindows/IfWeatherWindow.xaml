<y:IfWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:y="clr-namespace:IfSetupWindows"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" x:Class="IfSetupWindows.IfWeatherWindow"
        Title="Weather Trigger Configuration" Height="334.463" Width="550">
    <y:IfWindow.Resources>
        <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Path Data="M 11 21 L 0 21 L 0 6 L 5 1 L 6 1 L 11 6 z" Fill="{TemplateBinding Background}"/>
                            <Path Data="M 0.5 20 L 0.5 5.5 L 5 0.5 L 5.5 0.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 5.5 0.5 L 6 0.5 L 10.5 5.5 L 10.5 20.5 L 0 20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 1.5 19 L 1.5 5.5 L 5 1.5 L 5.5 1.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 5.5 1.5 L 6 1.5 L 9.5 5.5 L 9.5 19.5 L 1.0 19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 9 19 L 2 19 L 2 6 L 5.5 2 L 9 6 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Path Data="M 11 0 L 0 0 L 0 15 L 5 21 L 6 21 L 11 15 z" Fill="{TemplateBinding Background}"/>
                            <Path Data="M 10 0.5 L 0.5 0.5 L 0.5 15.5 L 5 20.5 L 5.5 20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 5.5 20.5 L 6 20.5 L 10.5 15.5 L 10.5 0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 9 1.5 L 1.5 1.5 L 1.5 15.5 L 5 19.5 L 5.5 19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 5.5 19.5 L 6 19.5 L 9.5 15.5 L 9.5 1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 9 2 L 2 2 L 2 15 L 5.5 19 L 9 15 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Themes:ClassicBorderDecorator BorderBrush="{x:Static Themes:ClassicBorderDecorator.ClassicBorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                            <Rectangle x:Name="ForegroundRect" Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                        </Themes:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Width" Value="21"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Path Data="M 21 11 L 21 0 L 6 0 L 0 5 L 0 6 L 6 11 z" Fill="{TemplateBinding Background}"/>
                            <Path Data="M 20 0.5 L 5.5 0.5 L 0.5 5 L 0.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 0.5 5.5 L 0.5 6 L 5.5 10.5 L 20.5 10.5 L 20.5 0 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 19 1.5 L 5.5 1.5 L 1.5 5 L 1.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 1.5 5.5 L 1.5 6 L 5.5 9.5 L 19.5 9.5 L 19.5 1.0 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 19 9 L 19 2 L 6 2 L 2 5.5 L 6 9 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Width" Value="21"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Path Data="M 0 11 L 0 0 L 15 0 L 21 5 L 21 6 L 15 11 z" Fill="{TemplateBinding Background}"/>
                            <Path Data="M 0.5 10 L 0.5 0.5 L 15.5 0.5 L 20.5 5 L 20.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 20.5 5.5 L 20.5 6 L 15.5 10.5 L 0 10.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 1.5 9 L 1.5 1.5 L 15.5 1.5 L 19.5 5 L 19.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 19.5 5.5 L 19.5 6 L 15.5 9.5 L 1 9.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                            <Path Data="M 2 9 L 2 2 L 15 2 L 19 5.5 L 15 9 " Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Width" Value="21"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Themes:ClassicBorderDecorator BorderBrush="{x:Static Themes:ClassicBorderDecorator.ClassicBorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                            <Rectangle Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                        </Themes:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </y:IfWindow.Resources>
    <Grid Margin="0,0,2,2">
        <Button x:Name="Save" Content="Save" HorizontalAlignment="Left" Margin="366,268,0,0" VerticalAlignment="Top" Width="75" Click="SetCriteria" ToolTip="Save the Criteria"/>
        <Button x:Name="Close" Content="Close" HorizontalAlignment="Left" Margin="455,268,0,0" VerticalAlignment="Top" Width="75" Click="Close_Click" ToolTip="Closes the window" />
        <GroupBox Header="Temperature" HorizontalAlignment="Left" Margin="10,73,0,0" VerticalAlignment="Top" Width="520" Height="88">
            <Grid HorizontalAlignment="Left" Margin="0,0,-2,-8" Width="510">
                <CheckBox x:Name="Temp" Content="Turn On Temparature Monitoring" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Checked="Temp_Checked" Unchecked="Temp_Unchecked" ToolTip="This will enable the monitoring of temperature, and the relation of that temperature to your set criteria"/>
                <Slider x:Name="Temp_Select" HorizontalAlignment="Left" Margin="10,47,0,0" VerticalAlignment="Top" Width="490" Maximum="100" Minimum="-20" Value="80" Background="White" IsEnabled="False" ToolTip="" AutoToolTipPlacement="TopLeft" LargeChange="0" Focusable="False">
                    <Slider.Resources>
                        <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Foreground" Value="{x:Null}"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Height" Value="21"/>
                            <Setter Property="Width" Value="11"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Canvas SnapsToDevicePixels="true">
                                            <Path Data="M 11 21 L 0 21 L 0 6 L 5 1 L 6 1 L 11 6 z" Fill="{TemplateBinding Background}"/>
                                            <Path Data="M 0.5 20 L 0.5 5.5 L 5 0.5 L 5.5 0.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 5.5 0.5 L 6 0.5 L 10.5 5.5 L 10.5 20.5 L 0 20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 1.5 19 L 1.5 5.5 L 5 1.5 L 5.5 1.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 5.5 1.5 L 6 1.5 L 9.5 5.5 L 9.5 19.5 L 1.0 19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 9 19 L 2 19 L 2 6 L 5.5 2 L 9 6 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                        </Canvas>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Foreground" Value="{x:Null}"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Height" Value="21"/>
                            <Setter Property="Width" Value="11"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Canvas SnapsToDevicePixels="true">
                                            <Path Data="M 11 0 L 0 0 L 0 15 L 5 21 L 6 21 L 11 15 z" Fill="{TemplateBinding Background}"/>
                                            <Path Data="M 10 0.5 L 0.5 0.5 L 0.5 15.5 L 5 20.5 L 5.5 20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 5.5 20.5 L 6 20.5 L 10.5 15.5 L 10.5 0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 9 1.5 L 1.5 1.5 L 1.5 15.5 L 5 19.5 L 5.5 19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 5.5 19.5 L 6 19.5 L 9.5 15.5 L 9.5 1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 9 2 L 2 2 L 2 15 L 5.5 19 L 9 15 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                        </Canvas>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Foreground" Value="{x:Null}"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Height" Value="21"/>
                            <Setter Property="Width" Value="11"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Themes:ClassicBorderDecorator BorderBrush="{x:Static Themes:ClassicBorderDecorator.ClassicBorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                                            <Rectangle x:Name="ForegroundRect" Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                                        </Themes:ClassicBorderDecorator>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Foreground" Value="{x:Null}"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Width" Value="21"/>
                            <Setter Property="Height" Value="11"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Canvas SnapsToDevicePixels="true">
                                            <Path Data="M 21 11 L 21 0 L 6 0 L 0 5 L 0 6 L 6 11 z" Fill="{TemplateBinding Background}"/>
                                            <Path Data="M 20 0.5 L 5.5 0.5 L 0.5 5 L 0.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 0.5 5.5 L 0.5 6 L 5.5 10.5 L 20.5 10.5 L 20.5 0 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 19 1.5 L 5.5 1.5 L 1.5 5 L 1.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 1.5 5.5 L 1.5 6 L 5.5 9.5 L 19.5 9.5 L 19.5 1.0 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 19 9 L 19 2 L 6 2 L 2 5.5 L 6 9 z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                        </Canvas>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="BorderThickness" Value="0,0,0,0"/>
                            <Setter Property="Foreground" Value="{x:Null}"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Width" Value="21"/>
                            <Setter Property="Height" Value="11"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Canvas SnapsToDevicePixels="true">
                                            <Path Data="M 0 11 L 0 0 L 15 0 L 21 5 L 21 6 L 15 11 z" Fill="{TemplateBinding Background}"/>
                                            <Path Data="M 0.5 10 L 0.5 0.5 L 15.5 0.5 L 20.5 5 L 20.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 20.5 5.5 L 20.5 6 L 15.5 10.5 L 0 10.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 1.5 9 L 1.5 1.5 L 15.5 1.5 L 19.5 5 L 19.5 5.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 19.5 5.5 L 19.5 6 L 15.5 9.5 L 1 9.5 " Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1.0"/>
                                            <Path Data="M 2 9 L 2 2 L 15 2 L 19 5.5 L 15 9 " Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                        </Canvas>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Foreground" Value="{x:Null}"/>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Width" Value="21"/>
                            <Setter Property="Height" Value="11"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Themes:ClassicBorderDecorator BorderBrush="{x:Static Themes:ClassicBorderDecorator.ClassicBorderBrush}" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                                            <Rectangle Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                                        </Themes:ClassicBorderDecorator>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Slider.Resources>
                </Slider>
                <Grid x:Name="RelationGrid" HorizontalAlignment="Left" Height="16" Margin="339,10,0,0" VerticalAlignment="Top" Width="158" IsEnabled="False">
                    <RadioButton x:Name="TempAbove" Content="Above" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="True"/>
                    <RadioButton x:Name="TempBelow" Content="Below" VerticalAlignment="Top" Margin="97,0,-15,0" />
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox Header="Precipitation" HorizontalAlignment="Left" Margin="10,166,0,0" VerticalAlignment="Top" Width="520" Height="88">
            <Grid HorizontalAlignment="Left" Margin="0,0,-2,-8" Width="510">
                <Slider x:Name="Precip_Select" HorizontalAlignment="Left" Margin="10,47,0,0" VerticalAlignment="Top" Width="489" Maximum="100" Minimum="1" IsEnabled="False" Value="50" ToolTip="Select the precipitation change (%)" AutoToolTipPlacement="TopLeft" Focusable="False" LargeChange="0"/>
                <CheckBox x:Name="Precip" Content="Turn On Precipitation Monitoring" HorizontalAlignment="Left" Margin="10,9,0,0" VerticalAlignment="Top" Checked="Precip_Checked" Unchecked="Precip_Unchecked" ToolTip="This will enable the monitoring of precipitation, and the relation of that precipitation to your set criteria" />
            </Grid>
        </GroupBox>
        <GroupBox Header="Location" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="520" Height="58">
            <Grid HorizontalAlignment="Left" Margin="0,0,-2,-8" Width="509">
                <Label Content="Enter your zip code." HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="24"/>
                <TextBox x:Name="ZipCode" HorizontalAlignment="Left" Height="24" Margin="125,10,0,0" TextWrapping="Wrap" Text="80634" VerticalAlignment="Top" Width="120" BorderBrush="Black" ToolTip="Enter your 6 Digit Zip Code"/>
            </Grid>
        </GroupBox>
    </Grid>
</y:IfWindow>
